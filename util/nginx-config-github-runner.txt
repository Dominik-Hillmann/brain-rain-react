##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
        root /root/actions-runner/brain-rain-react/brain-rain-react/brain-rain-react/build/;
        server_name brain-rain.com;
        index index.html index.htm;
        location / {
                try_files $uri /index.html;
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
        }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/brain-rain.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/brain-rain.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
        listen 80;
        server_name www.brain-rain.com;
        return 301 $scheme://brain-rain.com$request_uri;
}

server {
    if ($host = brain-rain.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80 default_server;
        server_name brain-rain.com;
    return 404; # managed by Certbot
}

